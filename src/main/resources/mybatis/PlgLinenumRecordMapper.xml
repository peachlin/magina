<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zmsj.magina.dao.PlgLinenumRecordMapper">
  <resultMap id="BaseResultMap" type="com.zmsj.magina.model.PlgLinenumRecord">
    <id column="id" property="id" jdbcType="VARCHAR"/>
    <result column="linenum" property="linenum" jdbcType="INTEGER"/>
    <result column="file_name" property="fileName" jdbcType="VARCHAR"/>
    <result column="read_time" property="readTime" jdbcType="TIMESTAMP"/>
    <result column="file_type" property="fileType" jdbcType="INTEGER"/>
    <result column="plg_type" property="plgType" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, linenum, file_name, read_time, file_type, plg_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List"/>
    from plg_linenum_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete
    from plg_linenum_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zmsj.magina.model.PlgLinenumRecord">
    insert into plg_linenum_record (id, linenum, file_name,
                                    read_time, file_type, plg_type)
    values (#{id,jdbcType=VARCHAR}, #{linenum,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR},
            #{readTime,jdbcType=TIMESTAMP}, #{fileType,jdbcType=INTEGER},
            #{plgType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zmsj.magina.model.PlgLinenumRecord">
    insert into plg_linenum_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="linenum != null">
        linenum,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="readTime != null">
        read_time,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="plgType != null">
        plg_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="linenum != null">
        #{linenum,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null">
        #{readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=INTEGER},
      </if>
      <if test="plgType != null">
        #{plgType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zmsj.magina.model.PlgLinenumRecord">
    update plg_linenum_record
    <set>
      <if test="linenum != null">
        linenum = #{linenum,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null">
        read_time = #{readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=INTEGER},
      </if>
      <if test="plgType != null">
        plg_type = #{plgType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zmsj.magina.model.PlgLinenumRecord">
    update plg_linenum_record
    set linenum   = #{linenum,jdbcType=INTEGER},
        file_name = #{fileName,jdbcType=VARCHAR},
        read_time = #{readTime,jdbcType=TIMESTAMP},
        file_type = #{fileType,jdbcType=INTEGER},
        plg_type  = #{plgType,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>